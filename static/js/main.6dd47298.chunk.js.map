{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","value","setValue","handleCalculation","e","operator","includes","target","innerText","slice","handleCalculate","val","eval","toString","err","alert","handleClear","handleDel","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s1BAGMA,IAAM,SAANA,MACJ,cAA0BC,oDAAS,IAAnC,uMAAOC,MAAP,cAAcC,SAAd,cACMC,kBAAoB,SAACC,GACzB,IAAMC,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3C,GAAIJ,MAAO,CACT,GACEI,EAASC,SAASF,EAAEG,OAAOC,YAC3BH,EAASC,SAASL,MAAMQ,OAAO,IAE/B,OAEAP,SAASD,MAAQG,EAAEG,OAAOC,gBAGvBH,EAASC,SAASF,EAAEG,OAAOC,YAAYN,SAASE,EAAEG,OAAOC,YAI5DE,gBAAkB,SAAlBA,kBACJ,IAAML,SAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3C,GAAIJ,QAAUI,SAASC,SAASL,MAAMQ,OAAO,IAAK,CAChD,IAAIE,IAAM,GACV,IACEA,IAAMC,KAAKX,MAAMY,YACjB,MAAOC,KAGP,OAFAC,MAAM,yCACNb,SAAS,IAGX,GAAY,IAARS,IAEF,YADAT,SAAS,IAGXA,SAASS,IAAIE,cAIXG,YAAc,WAClBd,SAAS,KAGLe,UAAY,WACZhB,OACFC,SAASD,MAAMQ,MAAM,GAAI,KAI7B,OACE,kEAAKS,UAAU,kBAAf,SACE,mEAAKA,UAAU,uBAAf,UACE,kEAAKA,UAAU,gBAAf,SAAgCjB,OAAgB,IAChD,mEAAKiB,UAAU,gBAAf,UACE,kEAAKA,UAAU,aAAf,SACE,gEAAGC,QAAS,kBAAMH,eAAlB,kBAEF,kEAAKE,UAAU,aAAf,SACE,gEAAGC,QAAS,kBAAMF,aAAlB,mBAEF,kEAAKC,UAAU,aAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,aAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,aAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,aAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,aAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,gBAAf,SACE,gEAAGC,QAAShB,kBAAmBe,UAAU,YAAzC,iBAIF,kEAAKA,UAAU,MAAf,SACE,gEAAGC,QAAShB,kBAAZ,iBAEF,kEAAKe,UAAU,aAAf,SACE,gEAAGC,QAAS,kBAAMT,mBAAlB,0BAOGX,2B,iIC3GAqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChC,EAAA,EAAD,MAEFiC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6dd47298.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [value, setValue] = useState(\"\");\n  const handleCalculation = (e) => {\n    const operator = [\"+\", \"-\", \"*\", \".\", \"/\", \"%\"];\n    if (value) {\n      if (\n        operator.includes(e.target.innerText) &&\n        operator.includes(value.slice(-1))\n      )\n        return;\n      else {\n        setValue(value + e.target.innerText);\n      }\n    } else {\n      if (!operator.includes(e.target.innerText)) setValue(e.target.innerText);\n    }\n  };\n\n  const handleCalculate = () => {\n    const operator = [\"+\", \"-\", \"*\", \".\", \"/\", \"%\"];\n    if (value && !operator.includes(value.slice(-1))) {\n      let val = \"\";\n      try {\n        val = eval(value.toString());\n      } catch (err) {\n        alert(\"Only Natural Numbers Are Allowed\");\n        setValue(\"\");\n        return;\n      }\n      if (val === 0) {\n        setValue(\"\");\n        return;\n      }\n      setValue(val.toString());\n    }\n  };\n\n  const handleClear = () => {\n    setValue(\"\");\n  };\n\n  const handleDel = () => {\n    if (value) {\n      setValue(value.slice(0, -1));\n    }\n  };\n\n  return (\n    <div className=\"whole_container\">\n      <div className=\"calculator-container\">\n        <div className=\"output-screen\">{value ? value : 0}</div>\n        <div className=\"btn-container\">\n          <div className=\"btn btn-op\">\n            <p onClick={() => handleClear()}>AC</p>\n          </div>\n          <div className=\"btn btn-op\">\n            <p onClick={() => handleDel()}>DEL</p>\n          </div>\n          <div className=\"btn btn-op\">\n            <p onClick={handleCalculation}>%</p>\n          </div>\n          <div className=\"btn btn-op\">\n            <p onClick={handleCalculation}>/</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>7</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>8</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>9</p>\n          </div>\n          <div className=\"btn btn-op\">\n            <p onClick={handleCalculation}>*</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>6</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>5</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>4</p>\n          </div>\n          <div className=\"btn btn-op\">\n            <p onClick={handleCalculation}>-</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>3</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>2</p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>1</p>\n          </div>\n          <div className=\"btn btn-op\">\n            <p onClick={handleCalculation}>+</p>\n          </div>\n          <div className=\"btn btn-large\">\n            <p onClick={handleCalculation} className=\"btn-large\">\n              0\n            </p>\n          </div>\n          <div className=\"btn\">\n            <p onClick={handleCalculation}>.</p>\n          </div>\n          <div className=\"btn btn-op\">\n            <p onClick={() => handleCalculate()}>=</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}